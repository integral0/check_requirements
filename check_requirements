#!/bin/bash

PATH="$HOME/.local/bin:$HOME/bin:/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin"

COL_RED="\033[91m"
COL_GREEN="\033[92m"
COL_YELLOW="\033[93m"
COL_NORM="\033[39m"

head()
{
    echo "Check tags in file requirements.yml"
    echo
}

file_not_found()
{
    head
    echo "File requirements.yml not found"
    exit 1
}

showhelp()
{
    head
    echo "Usage: $(basename $0) [OPTIONS]"
    echo 'OPTIONS:'
    echo '-h | --help:      Show this help screen'
    echo '-d | --diff-only: Show only different tags'
}

while [ "$1" ]; do
    case $1 in
        '-h' | '--help' | '?' )
            showhelp
            exit
            ;;
        '--diff-only' | '-d' )
            DIFF=1
            ;;
        * )
            ;;
    esac
    shift
done

RepoNameFile=$(mktemp)
WorkDir=$(pwd)

echo -e "${COL_NORM}RepoName${COL_NORM}\t${COL_NORM}LocalTag${COL_NORM}\t${COL_NORM}RemoteTag${COL_NORM}" > $RepoNameFile

GitRepos=$(find . -maxdepth 1 -mindepth 1 -name requirements.yml -print0 | xargs -0 grep "src" | awk '{print $3}' | sort | uniq)
[[ -z $GitRepos ]] && file_not_found
for GitRepo in $GitRepos; do
  # LOCAL-TAG
  GitLocalTag=$(grep "$GitRepo" requirements.yml -A 4 | grep "version:" | awk '{print $2}')
 
  # REMOTE-TAG
  RepoTmpDir=$(mktemp -d --dry-run)
  git clone $GitRepo $RepoTmpDir -q
  cd ${RepoTmpDir}
  GitRepoTag=$(git tag --sort "v:refname"  --merged | tail -1)
  cd ${WorkDir}
  rm -rf ${RepoTmpDir}

  GitRepoSave="${COL_NORM}${GitRepo}${COL_NORM}"

  printf '%s\n%s' "$GitLocalTag" "$GitRepoTag" | sort -C -V
  if [[ $? -eq 0 ]];then
    if [[ $GitLocalTag != $GitRepoTag ]];then
      GitLocalTagSave="${COL_YELLOW}${GitLocalTag}${COL_NORM}"
      GitRepoTagSave="${COL_GREEN}${GitRepoTag}${COL_NORM}"
    else
      GitLocalTagSave="${COL_NORM}${GitLocalTag}${COL_NORM}"
      GitRepoTagSave="${COL_NORM}${GitRepoTag}${COL_NORM}"
    fi
  else
    GitLocalTagSave="${COL_RED}${GitLocalTag}${COL_NORM}"
    GitRepoTagSave="${COL_YELLOW}${GitRepoTag}${COL_NORM}"
  fi

  GitRepoWidth=${#GitRepoSave}; [[ $GitRepoWidth -gt $GitRepoWidthLast ]] && GitRepoWidthLast=$GitRepoWidth
  GitLocalTagWidth=${#GitLocalTagSave}; [[ $GitLocalTagWidth -gt $GitLocalTagWidthLast ]] && GitLocalTagWidthLast=$GitLocalTagWidth
  GitRepoTagWidth=${#GitRepoTagSave}; [[ $GitRepoTagWidth -gt $GitRepoTagWidthLast ]] && GitRepoTagWidthLast=$GitRepoTagWidth

  if [[ -z $DIFF ]]; then
    echo -e "${GitRepoSave}\t${GitLocalTagSave}\t${GitRepoTagSave}" >> ${RepoNameFile}
  else
    if [[ $GitLocalTag != $GitRepoTag ]];then
      echo -e "${GitRepoSave}\t${GitLocalTagSave}\t${GitRepoTagSave}" >> ${RepoNameFile}
    fi
  fi
done

while read repo ltag rtag; do
  printf "%-${GitRepoWidthLast}s %-${GitLocalTagWidthLast}s %-${GitRepoTagWidthLast}s\n" "${repo}" "${ltag}" "${rtag}"
done  < ${RepoNameFile}
rm -f $RepoNameFile
